# General
# =======

# Need for theme https://github.com/rakr/vim-one#tmux-support
# Add truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"
# tmux display things in 256 colors
set -g default-terminal "screen-256color"

# make vim cursor display properly in insert mode
# https://github.com/neovim/neovim/wiki/FAQ#cursor-shape-doesnt-change-in-tmux
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# automatically renumber tmux windows
set -g renumber-windows on

# remap prefix to control - a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# nvim wants to option set
set-option -sg escape-time 10

# https://stackoverflow.com/questions/18760281/how-to-increase-scrollback-buffer-size-in-tmux
set-option -g history-limit 5000

# use vim shortcuts for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
bind Escape copy-mode
# bind to P instead of p because p navigates to previous window
bind P paste-buffer
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "tmux save-buffer - | reattach-to-user-namespace pbcopy"

set-option -g status-keys vi

# Index start for panes and windows
set -g base-index 1
set -g pane-base-index 1

# Mouse support for pane/window switching
# NOTE: This breaks selectiong/copying text on OSX
# To select text as expected, hold Option to disable it (iTerm2)
setw -g mouse on

# Keybinds
# ========

# Reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# Resize pane shortcuts
bind -r Left resize-pane -L 10
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5
bind -r Right resize-pane -R 10

# tile all windows
unbind =
bind = select-layout tiled

# make next and previous window commands repeatable
unbind n
unbind p
bind -r n next-window
bind -r p previous-window

# Smart pane switching with awareness of Vim and fzf splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
# | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# https://github.com/junegunn/fzf/pull/582
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
# is_vim='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_start_command}" | grep -iqE "fzf"` || `echo "#{pane_current_command}" | grep -iqE "fzf"`'
bind-key -n C-h if-shell "$not_tmux" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$not_tmux" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# split window
bind | split-window -h -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# disable close window/pane confirmations
bind-key & kill-window
bind-key x kill-pane

# Fix window names
# http://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
set-option -g allow-rename off

# Send the same command to all panes/windows/sessions
# http://kaushalmodi.github.io/2014/03/06/send-a-command-to-every-pane-slash-window-slash-session-in-tmux/
# run 'source ~/.zshrc' to apply shell changes to all tmux sessions/windows/panes
bind E command-prompt -p "Command:" \
         "run \"tmux list-sessions                  -F '##{session_name}'        | xargs -I SESS \
                tmux list-windows  -t SESS          -F 'SESS:##{window_index}'   | xargs -I SESS_WIN \
                tmux list-panes    -t SESS_WIN      -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
                tmux send-keys     -t SESS_WIN_PANE '%1' Enter\""

### Theme
# =======
source ~/.dotfiles/tmux/theme.sh

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# https://www.seanh.cc/2020/12/27/copy-and-paste-in-tmux/
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe-no-clear'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
